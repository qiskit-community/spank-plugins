name: Check direct-access C API

on:
  pull_request:
    branches:
      - main
    paths:
      - commands/qrun/daapi**
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Rust Log level'
        required: true
        default: 'warn'
        type: choice
        options:
        - error
        - warn
        - info
        - debug
        - trace

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.4

      - name: Set Toolchain
        # https://github.com/dtolnay/rust-toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
          
      - name: Build daapi_c
        working-directory: commands/qrun/daapi_c
        run: |
          cargo build --release

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.4

      - name: Set Toolchain
        # https://github.com/dtolnay/rust-toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run rustfmt
        working-directory: commands/qrun/daapi_c
        run: |
          cargo fmt --all -- --check

      - name: Run Clippy
        working-directory: commands/qrun/daapi_c
        env:
          RUSTFLAGS: "-Dwarnings"
        run: cargo clippy --all-targets --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.4

      - name: Set Toolchain
        # https://github.com/dtolnay/rust-toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        working-directory: commands/qrun/daapi_c
        run: |
          cargo test

      - name: Build examples
        working-directory: commands/qrun/daapi_c/app
        run: |
          pushd ..
          cargo build --release
          popd
          pip install conan
          conan profile detect
          conan install conanfile.txt --build=missing
          pushd build
          cJSON_DIR=./Release/generators cmake .. -DCMAKE_BUILD_TYPE=Release
          popd
          cd build
          make clean
          make

      - name: Setup daa_sim
        working-directory: daa_sim
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start daa_sim
        working-directory: daa_sim
        run: ./run.sh config.yaml

      - name: Check readiness of daa_sim
        run: curl http://0.0.0.0:8290/version

      - name: Run example
        working-directory: commands/qrun/daapi_c/app/build
        run: ./list_backends
        env:
          RUST_LOG: ${{ inputs.logLevel }}

      - name: Stop daa_sim
        working-directory: daa_sim
        run: ./stop.sh
