name: Linting
on:
  pull_request:
    branches:
      - main
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read
jobs:
  linting:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.4

      - name: Install linting tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy shellcheck shfmt
          pip install --upgrade pip
          pip install ruff mypy
          rustup update stable
          rustup component add clippy

      - name: Install SLURM dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y slurm-wlm slurm-wlm-basic-plugins libslurm-dev

      # C Linting with Clang-Tidy
      - name: Set up C environment
        run: |
          mkdir -p build_skeleton build_spank_ibm_qrun
          ls
          cd build_skeleton
          cmake ../plugins/skeleton
          cd ../build_spank_ibm_qrun
          cmake ../plugins/spank_ibm_qrun
          cd ../../

      - name: Configure Clang-Tidy
        run: |
          echo "Creating .clang-tidy configuration..."
          cat <<EOF > .clang-tidy
          ---
          Checks: '-*,modernize-*,readability-*,performance-*'
          WarningsAsErrors: ''
          HeaderFilterRegex: '.*'
          EOF

      - name: Run clang-tidy (C linter)
        run: |
          clang-tidy plugins/skeleton/*.c -p build_skeleton
          clang-tidy plugins/spank_ibm_qrun/*.c -p build_spank_ibm_qrun


      - name: Report C linting status
        run: |
          echo "**************************"
          echo " C code linting completed."
          echo "**************************"

      # Rust Linting with Clippy
      - name: Run Rust Clippy (daapi)
        working-directory: commands/qrun/daapi
        run: cargo clippy -- -D warnings

      - name: Run Rust Clippy (qiskit_pubs_gen)
        working-directory: commands/qrun/qiskit_pubs_gen
        run: cargo clippy -- -D warnings

      - name: Run Rust Clippy (qrun)
        working-directory: commands/qrun/qrun
        run: cargo clippy -- -D warnings

      - name: Report Rust linting status
        run: |
          echo "*******************************"
          echo " Rust code linting completed."
          echo "******************************"

      # Python Linting with Ruff and Mypy
      - name: Run Ruff (Python linter)
        run: ruff check .

      - name: Run Mypy (Python type checking)
        run: mypy .

      - name: Report Python linting status
        run: |
          echo "*******************************"
          echo " Python linting completed."
          echo "******************************"