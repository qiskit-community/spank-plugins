/*
 * Qiskit Runtime API
 *
 * The Qiskit Runtime API description
 *
 * The version of the OpenAPI document: 0.21.2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BackendsResponseV2DevicesInnerStatus : The status of the backend device
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BackendsResponseV2DevicesInnerStatus {
    /// The status name of the backend device
    #[serde(rename = "name")]
    pub name: Name,
    /// Optional reason for the status
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
}

impl BackendsResponseV2DevicesInnerStatus {
    /// The status of the backend device
    pub fn new(name: Name) -> BackendsResponseV2DevicesInnerStatus {
        BackendsResponseV2DevicesInnerStatus { name, reason: None }
    }
}
/// The status name of the backend device
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Name {
    #[serde(rename = "online")]
    Online,
    #[serde(rename = "paused")]
    Paused,
    #[serde(rename = "offline")]
    Offline,
}

impl Default for Name {
    fn default() -> Name {
        Self::Online
    }
}
